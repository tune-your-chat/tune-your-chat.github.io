<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Matrix.org - Security</title>
    <subtitle>The Matrix.org Foundation</subtitle>
    <link href="https://tune-your-chat.github.io/category/security/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://tune-your-chat.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-08-04T10:30:00+00:00</updated>
    <id>https://tune-your-chat.github.io/category/security/atom.xml</id>
    
    
    
    
<entry xml:lang="en">
    <title>Disclosure: Bridges security issues</title>
    <published>2023-08-04T10:30:00+00:00</published>
    <updated>2023-08-04T10:30:00+00:00</updated>
    <author>
      <name>Integrations Team, Matrix Security Team</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2023/08/bridges-vulnerability-disclosure/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2023/08/bridges-vulnerability-disclosure/</id>
    <content type="html">&lt;p&gt;Hi folks. As previously mentioned on &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2023&#x2F;07&#x2F;bridges-security-updates&#x2F;&quot;&gt;Monday&lt;&#x2F;a&gt;, we’re now disclosing the vulnerabilities patched for the IRC, Slack and Hookshot bridges. If you have not already done so, please ensure you are running the patched versions.&lt;&#x2F;p&gt;
&lt;p&gt;Today we are disclosing the 3 vulnerabilities.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;matrix-appservice-bridge-doesn-t-verify-the-sub-parameter-of-an-openid-token-exchange-cve-2023-38691&quot;&gt;matrix-appservice-bridge doesn&#x27;t verify the sub parameter of an openId token exchange (CVE-2023-38691)&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-bridge&#x2F;security&#x2F;advisories&#x2F;GHSA-vc7j-h8xg-fv5x&quot;&gt;GHSA-vc7j-h8xg-fv5x&lt;&#x2F;a&gt; &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name=CVE-2023-38691&quot;&gt;CVE-2023-38691&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;POST &#x2F;v1&#x2F;exchange_openid&lt;&#x2F;code&gt; endpoint did not check that the servername part of the &lt;code&gt;sub&lt;&#x2F;code&gt; parameter (containing the user&#x27;s &lt;em&gt;claimed&lt;&#x2F;em&gt; MXID) is the same as the servername we are talking to. This could allow a malicious actor to spin up a server on any given domain, respond with a &lt;code&gt;sub&lt;&#x2F;code&gt; parameter according to the user they want to act as and use the resulting token to perform provisioning requests.&lt;&#x2F;p&gt;
&lt;p&gt;This is now patched so that the server part of the sub &#x2F; user ID is checked against the server used to make the request.&lt;&#x2F;p&gt;
&lt;p&gt;Discovered and reported by a community member.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;irc-command-injection-via-admin-commands-containing-newlines-cve-2023-38690&quot;&gt;IRC command injection via admin commands containing newlines (CVE-2023-38690)&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;security&#x2F;advisories&#x2F;GHSA-3pmj-jqqp-2mj3&quot;&gt;GHSA-3pmj-jqqp-2mj3&lt;&#x2F;a&gt; &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name=CVE-2023-38690&quot;&gt;CVE-2023-38690&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;When the IRC bridge attempted to parse an admin command from a Matrix user, it would only split arguments by a literal space. For example, sending “!join #matrix\nfoobar” would treat the channel name as “#matrix\nfoobar”. This could then be exploited to inject any IRC command into the bridge to be run. Since the !join command first joins via the bridge bot user, it could be used to execute commands as the bridge bot.&lt;&#x2F;p&gt;
&lt;p&gt;This is now patched so that both the command handler is more strict about its arguments, as well as channel names being explicitly validated when provided by users.&lt;&#x2F;p&gt;
&lt;p&gt;Discovered and reported by &lt;a href=&quot;https:&#x2F;&#x2F;valentin-lorentz.fr&#x2F;&quot;&gt;Val Lorentz&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;events-can-be-crafted-to-leak-parts-of-targeted-messages-from-other-bridged-rooms-cve-2023-38700&quot;&gt;Events can be crafted to leak parts of targeted messages from other bridged rooms (CVE-2023-38700)&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;security&#x2F;advisories&#x2F;GHSA-c7hh-3v6c-fj4q&quot;&gt;GHSA-c7hh-3v6c-fj4q&lt;&#x2F;a&gt; &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name=CVE-2023-38700&quot;&gt;CVE-2023-38700&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The IRC bridge caches recent timeline messages in memory, so that when a reply is seen for a message it doesn’t need to request the event content from the homeserver. However the room ID was not validated when accessing this cache, so a malicious actor could craft a reply event in another room referencing any event ID (so long as it was still in the bridge cache) to trick the bridge into posting the message content into a bridged reply.&lt;&#x2F;p&gt;
&lt;p&gt;Discovered and reported by &lt;a href=&quot;https:&#x2F;&#x2F;valentin-lorentz.fr&#x2F;&quot;&gt;Val Lorentz&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;If you have further questions, please reach out on &lt;a href=&quot;mailto:security@matrix.org&quot;&gt;security@matrix.org&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>Bridges Security Update</title>
    <published>2023-07-31T11:40:00+00:00</published>
    <updated>2023-07-31T11:40:00+00:00</updated>
    <author>
      <name>Integrations Team, Matrix Security Team</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2023/07/bridges-security-updates/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2023/07/bridges-security-updates/</id>
    <content type="html">&lt;p&gt;Today we are announcing security updates for several of our bridges.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;matrix-appservice-irc &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;releases&#x2F;tag&#x2F;1.0.1&quot;&gt;1.0.1&lt;&#x2F;a&gt; affected by GHSA-vc7j-h8xg-fv5x &lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name=CVE-2023-38691&quot;&gt;CVE-2023-38691&lt;&#x2F;a&gt;, GHSA-3pmj-jqqp-2mj3 &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name=CVE-2023-38690&quot;&gt;CVE-2023-38690&lt;&#x2F;a&gt;, and GHSA-c7hh-3v6c-fj4q&lt;&#x2F;li&gt;
&lt;li&gt;matrix-hookshot &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-hookshot&#x2F;releases&#x2F;tag&#x2F;4.4.1&quot;&gt;4.4.1&lt;&#x2F;a&gt; affected by GHSA-vc7j-h8xg-fv5x &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name=CVE-2023-38691&quot;&gt;CVE-2023-38691&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;matrix-appservice-slack &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-slack&#x2F;releases&#x2F;tag&#x2F;2.1.2&quot;&gt;2.1.2&lt;&#x2F;a&gt; affected by GHSA-vc7j-h8xg-fv5x &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name=CVE-2023-38691&quot;&gt;CVE-2023-38691&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In addition we have released matrix-appservice-bridge &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-bridge&#x2F;releases&#x2F;tag&#x2F;9.0.1&quot;&gt;9.0.1&lt;&#x2F;a&gt; (and backported to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-bridge&#x2F;releases&#x2F;tag&#x2F;8.1.2&quot;&gt;8.1.2&lt;&#x2F;a&gt;) which patches GHSA-vc7j-h8xg-fv5x.&lt;&#x2F;p&gt;
&lt;p&gt;All mentioned bridges are affected by a vulnerability in the provisioning interfaces of these bridges. If you are unable to upgrade, please disable provisioning for now (which should be documented in the relevant bridge sample config).&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;blob&#x2F;develop&#x2F;config.sample.yaml#L520-L522&quot;&gt;IRC bridge config&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;Set &lt;code&gt;provisioning.enabled&lt;&#x2F;code&gt; to false.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-slack&#x2F;blob&#x2F;a9f555308fb7485ebb1df98e6c327808915f816f&#x2F;config&#x2F;config.sample.yaml#L163&quot;&gt;Slack bridge config&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;Set &lt;code&gt;provisioning.enabled&lt;&#x2F;code&gt; to false.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-hookshot&#x2F;blob&#x2F;main&#x2F;config.sample.yml#L192&quot;&gt;Hookshot config&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;Remove the &lt;code&gt;widgets&lt;&#x2F;code&gt; resource (NOT provisioning)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The IRC bridge is also affected by two additional vulnerabilities. In this case, we would recommend upgrading &lt;strong&gt;immediately&lt;&#x2F;strong&gt; rather than working around the problems.&lt;&#x2F;p&gt;
&lt;p&gt;Disclosures for these vulnerabilities, as well as CVE numbers will be out in three days (Thursday 3rd).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;We advise to upgrade as soon as possible.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you have further questions, please reach out on &lt;a href=&quot;mailto:security@matrix.org&quot;&gt;security@matrix.org&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>Postponing the Libera.Chat deportalling</title>
    <published>2023-07-28T14:00:00+00:00</published>
    <updated>2023-07-28T14:00:00+00:00</updated>
    <author>
      <name>Thib</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2023/07/postponing-libera-chat-deportalling/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2023/07/postponing-libera-chat-deportalling/</id>
    <content type="html">&lt;p&gt;We have recently announced that &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2023&#x2F;07&#x2F;deportalling-libera-chat&#x2F;&quot;&gt;we will be honouring Libera Chat’s request&lt;&#x2F;a&gt; to turn off portalled rooms on the Libera.Chat bridge maintained by the Matrix.org Foundation. The changes were originally scheduled to be effective on 31st July. In the meantime, we posted &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2023&#x2F;07&#x2F;make-sure-libera-bridge-keeps-working&#x2F;&quot;&gt;instructions for people to turn their portalled rooms into plumbed ones&lt;&#x2F;a&gt; so the bridge keeps working for them.&lt;&#x2F;p&gt;
&lt;p&gt;Some stability issues on the bridge have prevented people from turning their portalled rooms into plumbed ones. We have been actively working on resolving those issues since the first reports and the situation is gradually improving. However, at this point, we do not believe the plumbed mode can be considered sufficiently stable yet.&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;Additionally, as part of the project we have been made aware of several new bridge security issues. These issues must be patched ahead of the plumbing stability work thereby increasing the overall scope of the project. The limited resources of the&lt;a href=&quot;http:&#x2F;&#x2F;Matrix.org&quot;&gt; Matrix.org&lt;&#x2F;a&gt; Foundation didn’t allow us to meet the deadline in time.&lt;&#x2F;p&gt;
&lt;p&gt;Rather than plough ahead with the original timeline and risking splitting communities, we have asked Libera Chat for an extension for turning off portal rooms to ensure successful migrations in order to make sure the bridge is ready to handle the traffic in plumbed rooms and to leave people enough time to migrate their rooms after the stabilisation work. We have asked the Libera Chat staff to allow us to postpone the deportalling to Friday 11 August, which they accepted. We’re grateful to the Libera Chat team for accommodating us.&lt;&#x2F;p&gt;
&lt;p&gt;We will turn off the new portal creation on Monday 31 July, but will leave the existing portals active. On Friday 11 August we will make all the portal rooms read-only, and will send a message in each portalled room to list all the public rooms plumbed to the same channel on IRC.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;security-release-information&quot;&gt;Security release information&lt;&#x2F;h2&gt;
&lt;p&gt;On Monday 31st, we will release new security updates for several bridges and the matrix-appservice-bridge library, including the IRC bridge. These will be:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;matrix-appservice-bridge 9.0.1&lt;&#x2F;li&gt;
&lt;li&gt;matrix-appservice-irc 1.0.1&lt;&#x2F;li&gt;
&lt;li&gt;matrix-appservice-slack 2.1.2&lt;&#x2F;li&gt;
&lt;li&gt;matrix-hookshot 4.4.1&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We, and the community, have found several vulnerabilities classified as High severity and strongly recommend upgrading as soon as possible after the release.&lt;&#x2F;p&gt;
&lt;p&gt;A full disclosure of the vulnerabilities will be out 3 days after the release, to allow people time to upgrade.&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>Disclosing Synapse security advisories</title>
    <published>2023-05-24T13:44:36+00:00</published>
    <updated>2023-05-24T13:36:50+00:00</updated>
    <author>
      <name>Denis Kasak</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2023/05/24/disclosing-synapse-security-advisories/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2023/05/24/disclosing-synapse-security-advisories/</id>
    <content type="html">&lt;p&gt;Today we are retroactively publishing advisories for security bugs in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;&quot;&gt;Synapse&lt;&#x2F;a&gt;. From oldest to most recent, they are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;security&#x2F;advisories&#x2F;GHSA-p9qp-c452-f9r7&quot;&gt;GHSA-p9qp-c452-f9r7&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvekey.cgi?keyword=CVE-2022-39374&quot;&gt;CVE-2022-39374&lt;&#x2F;a&gt;), fixed in Synapse 1.68.0 and affecting all prior versions since Synapse 1.62.0;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;security&#x2F;advisories&#x2F;GHSA-45cj-f97f-ggwv&quot;&gt;GHSA-45cj-f97f-ggwv&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvekey.cgi?keyword=CVE-2022-39335&quot;&gt;CVE-2022-39335&lt;&#x2F;a&gt;), fixed in Synapse 1.69.0 and affecting all prior versions; and finally&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;security&#x2F;advisories&#x2F;GHSA-f3wc-3vxv-xmvr&quot;&gt;GHSA-f3wc-3vxv-xmvr&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvekey.cgi?keyword=CVE-2023-32323&quot;&gt;CVE-2023-32323&lt;&#x2F;a&gt;), fixed in Synapse 1.74.0 and affecting all prior versions.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We strongly advise Synapse operators who are still on earlier Synapse versions to upgrade to the latest version (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v1.84.0&quot;&gt;v1.84.0&lt;&#x2F;a&gt;) or at the very least v1.74.0 (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v1.74.0&quot;&gt;released Dec 2022&lt;&#x2F;a&gt;), to prevent attacks based on these vulnerabilities. Please see the advisories for the full details, including a description of&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the vulnerability and potential attacks,&lt;&#x2F;li&gt;
&lt;li&gt;exactly which deployments are vulnerable, and&lt;&#x2F;li&gt;
&lt;li&gt;workarounds and mitigations.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Because these bugs are either related to or exploitable over Matrix federation, we have delayed publishing these advisories until now out of caution. This allowed us to ensure that the majority of Synapse homeservers across the public federation have upgraded to a sufficiently patched version, based on the (opt-in) &lt;a href=&quot;https:&#x2F;&#x2F;matrix-org.github.io&#x2F;synapse&#x2F;latest&#x2F;usage&#x2F;administration&#x2F;monitoring&#x2F;reporting_homeserver_usage_statistics.html&quot;&gt;stats reporting&lt;&#x2F;a&gt; to the Matrix.org foundation.&lt;&#x2F;p&gt;
&lt;p&gt;If you have any questions or comments about this announcement or any of the advisories, e-mail us at &lt;a href=&quot;mailto:security@matrix.org&quot;&gt;security@matrix.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>Security releases: matrix-js-sdk 24.0.0 and matrix-react-sdk 3.69.0</title>
    <published>2023-03-28T00:00:00+00:00</published>
    <updated>2023-03-28T00:00:00+00:00</updated>
    <author>
      <name>Denis Kasak</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2023/03/28/security-releases-matrix-js-sdk-24-0-0-and-matrix-react-sdk-3-69-0/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2023/03/28/security-releases-matrix-js-sdk-24-0-0-and-matrix-react-sdk-3-69-0/</id>
    <content type="html">&lt;p&gt;Today we are issuing security releases of matrix-js-sdk and matrix-react-sdk to
patch a pair of High severity vulnerabilities
(&lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvekey.cgi?keyword=CVE-2023-28427&quot;&gt;CVE-2023-28427&lt;&#x2F;a&gt;
&#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;security&#x2F;advisories&#x2F;GHSA-mwq8-fjpf-c2gr&quot;&gt;GHSA-mwq8-fjpf-c2gr&lt;&#x2F;a&gt;
for matrix-js-sdk and
&lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvekey.cgi?keyword=CVE-2023-28103&quot;&gt;CVE-2023-28103&lt;&#x2F;a&gt;
&#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;security&#x2F;advisories&#x2F;GHSA-6g43-88cp-w5gv&quot;&gt;GHSA-6g43-88cp-w5gv&lt;&#x2F;a&gt;
for matrix-react-sdk).&lt;&#x2F;p&gt;
&lt;p&gt;Affected clients include those which depend on the affected libraries, such as
Element Web&#x2F;Desktop and Cinny. Releases of the affected clients should follow
shortly. We advise users of those clients to upgrade at their earliest
convenience.&lt;&#x2F;p&gt;
&lt;p&gt;The issues involve prototype pollution via events containing special strings in
key locations, which can temporarily disrupt normal functioning of
matrix-js-sdk and matrix-react-sdk, potentially impacting the consumer&#x27;s
ability to process data safely.&lt;&#x2F;p&gt;
&lt;p&gt;Although we have only demonstrated a denial-of-service-style impact, we cannot
completely rule out the possibility of a more severe impact due to the
relatively extensive attack surface. We have therefore classified this as High
severity and strongly recommend upgrading as a precautionary measure.&lt;&#x2F;p&gt;
&lt;p&gt;We found these issues during a codebase audit that we had &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;08&#x2F;31&#x2F;security-releases-matrix-js-sdk-19-4-0-and-matrix-react-sdk-3-53-0&quot;&gt;previously
announced&lt;&#x2F;a&gt;
in an earlier security release of matrix-js-sdk and matrix-react-sdk. The
earlier release had already addressed a set of similar vulnerabilities that
were assigned
&lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvekey.cgi?keyword=CVE%2D2022%2D36059&quot;&gt;CVE-2022-36059&lt;&#x2F;a&gt;
&#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;security&#x2F;advisories&#x2F;GHSA-rfv9-x7hh-xc32&quot;&gt;GHSA-rfv9-x7hh-xc32&lt;&#x2F;a&gt;
and
&lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvekey.cgi?keyword=CVE%2D2022%2D36060&quot;&gt;CVE-2022-36060&lt;&#x2F;a&gt;
&#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;security&#x2F;advisories&#x2F;GHSA-2x9c-qwgf-94xr&quot;&gt;GHSA-2x9c-qwgf-94xr&lt;&#x2F;a&gt;,
which we had initially decided not to disclose until the completion of the
audit. Now that the audit is finished, we are disclosing those previous
advisories as well.&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>Upgrade now to address E2EE vulnerabilities in matrix-js-sdk, matrix-ios-sdk and matrix-android-sdk2</title>
    <published>2022-09-28T17:41:33+00:00</published>
    <updated>2022-09-28T17:41:33+00:00</updated>
    <author>
      <name>Matthew Hodgson, Denis Kasak, Matrix Cryptography Team, Matrix Security Team</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients/</id>
    <content type="html">&lt;p&gt;&lt;strong&gt;TL;DR:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Two critical severity vulnerabilities in end-to-end encryption were found in
the SDKs which power Element, Beeper, Cinny, SchildiChat, Circuli, Synod.im
and any other clients based on matrix-js-sdk, matrix-ios-sdk or
matrix-android-sdk2.&lt;&#x2F;li&gt;
&lt;li&gt;These have now been fixed, and we have not seen evidence of them being
exploited in the wild. All of the critical vulnerabilities require
cooperation from a malicious homeserver to be exploited.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Please upgrade immediately in order to be protected against these
vulnerabilities.&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Clients with other encryption implementations (including Hydrogen, ElementX,
Nheko, FluffyChat, Syphon, Timmy, Gomuks and Pantalaimon) are not affected;
&lt;strong&gt;this is not a protocol bug&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;We take the security of our end-to-end encryption extremely seriously, and we
have an ongoing series of public independent audits booked to help guard
against future vulnerabilities.  We will also be making some protocol changes
in the future to provide additional layers of protection.&lt;&#x2F;li&gt;
&lt;li&gt;This resolves the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;09&#x2F;23&#x2F;pre-disclosure-upcoming-critical-security-release-of-matrix-sd-ks-and-clients&quot;&gt;pre-disclosure&lt;&#x2F;a&gt; issued on September 23rd.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Recently we have been hard at work investigating some subtle security
vulnerabilities in certain implementations of Matrix&#x27;s end-to-end encryption
which were responsibly disclosed to us by researchers at Royal Holloway
University London, University of Sheffield and Brave Software. Two of these
vulnerabilities are critical severity, in that they could allow malicious
server admins to attack their users, and are implementation bugs in clients
using matrix-js-sdk (e.g. Element Web) or implementations derived from
matrix-js-sdk, rather than protocol flaws. matrix-rust-sdk (and other 2nd&#x2F;3rd
generation SDKs) are not affected by these.  These vulnerabilities are fixed in
today&#x27;s release, and we are not aware of them having been exploited in the
wild.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;If you&#x27;re using Element or an application that shares the same SDKs (Beeper,
Cinny, SchildiChat, Circuli, Synod.im) then please upgrade now. Do not perform
verification with new devices until you have upgraded.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;d like to thank the security researchers for investing significant time and
effort into doing a deep dive to find these issues, and thus contributing
materially to making Matrix more secure for the whole ecosystem.  Despite our
best efforts, there is always a risk of security issues in software, and we&#x27;re
very glad to have identified and fixed these issues while also taking the
opportunity to improve our vulnerability disclosure and coordinated upgrade
process.&lt;&#x2F;p&gt;
&lt;p&gt;Please note that the critical severity issues are implementation issues in
matrix-js-sdk and derivatives, and are &lt;strong&gt;not&lt;&#x2F;strong&gt; protocol issues in Matrix. The
latest version of the researchers&#x27; paper that we&#x27;ve seen incorrectly presents
Element as &#x27;the reference Matrix client&#x27;, and confuses the higher severity
implementation bugs with lower severity protocol critique.  This is very
unfortunate, given Hydrogen, ElementX, Nheko, FluffyChat, Syphon, Timmy, Gomuks
and Pantalaimon and other independent implementations are not affected. In
fact, every client independently implemented using the Matrix spec seems to
have got it right, which speaks well of the protocol.  It&#x27;s only the first
generation SDK (predating the spec) and its derivatives which had these bugs.&lt;&#x2F;p&gt;
&lt;p&gt;The two critical severity issues lead to three attack scenarios, all of which
are prevented by today&#x27;s releases:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&quot;&lt;em&gt;Key&#x2F;Device Identifier Confusion in SAS Verification&lt;&#x2F;em&gt;&quot; – A bug existed in
matrix-js-sdk where it confused together device IDs and cross-signing keys
(given under the hood, cross-signing keys are represented as devices). This
could be exploited by a malicious server admin to break emoji-based
verification when cross-signing is in use, authenticating themselves rather
than the target user being verified. This bug is only present in
matrix-js-sdk (not iOS or Android SDKs), tracked as a critical severity CVE:
CVE-2022-39250.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&quot;&lt;em&gt;Trusted Impersonation&lt;&#x2F;em&gt;&quot; – matrix-js-sdk (and derived SDKs) suffered from
a protocol-confusion bug where it would incorrectly accept to-device messages
encrypted by Megolm rather than Olm, attributing them to the Megolm sender
rather than the actual sender. As a result, an attacker could fake the
trusted sender of to-device messages, allowing them to send fake to-device
messages to devices - e.g. fake keys to spoof historical messages from other
users.  This bug is tracked as a critical severity CVE: CVE-2022-39251
(matrix-js-sdk), CVE-2022-39255 (matrix-ios-sdk) and CVE-2022-39248
(matrix-android-sdk2).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&quot;&lt;em&gt;Malicious key backup&lt;&#x2F;em&gt;&quot; – the above &#x27;trusted impersonation&#x27; bug in
matrix-js-sdk (and derived SDKs) could be used by a malicious homeserver
admin to add a malicious key backup to the user&#x27;s account under certain
unusual conditions in order to exfiltrate message keys. While we are not
aware of this being exploited in the wild, out of an abundance of caution we
recommend checking your key backup settings. If you are particularly paranoid
you may wish to reset your online key backup.  This doesn&#x27;t have a separate
CVE, as the root cause is the same as &quot;Trusted Impersonation&quot;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Three lower priority issues were also identified by the researchers:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&quot;&lt;em&gt;Semi-trusted Impersonation&lt;&#x2F;em&gt;&quot; – matrix-js-sdk (and derived SDKs) accepted keys
forwarded by other users, even if your client didn&#x27;t request them. As
a result, a malicious server admin could fake an encrypted message to look as
if it was sent from a given user on that server. However, impersonated
messages like this are clearly marked  by clients like Element with a clear
&quot;The authenticity of this encrypted message can&#x27;t be guaranteed&quot; warning
– which is why we consider this low severity. That said, it&#x27;s an avoidable
attack, and we&#x27;ve fixed this by ensuring that clients don&#x27;t accept &#x27;unsafe&#x27;
keys (with the exception of keys forwarded when you invite a user to an
existing conversation).  In future, in Olm&#x2F;Megolm v2 we&#x27;re also linking
key-sending events to the underlying recipient Olm identity to ensure that
keys cannot be misappropriated.  This issue is tracked as a moderate severity
CVE: CVE-2022-39249 (matrix-js-sdk), CVE-2022-39257 (matrix-ios-sdk) and
CVE-2022-39246 (matrix-android-sdk2).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&quot;&lt;em&gt;Homeserver Control of Room Membership&lt;&#x2F;em&gt;&quot; – A malicious homeserver can fake
invites on behalf of its users to invite malicious users into their
conversations, or add malicious devices into its users accounts.  However,
when this happens, we clearly warn the user: if you have verified the users
you are talking to, the room and user will be shown with a big red cross to
mark if malicious devices have been added.  Similarly, if an unexpected user
is invited to a conversation, all users can clearly see and take evasive
action.  Therefore we consider this a low severity issue.  That said, this
behaviour can be improved, and we&#x27;ve started work on switching our trust
model to trust-on-first-use (so that new untrusted devices are proactively
excluded from conversations, even if you haven&#x27;t explicitly verified their
owner) - and we&#x27;re also looking to add cryptographic signatures to membership
events in E2EE rooms to stop impersonated invites.  These fixes will land
over the coming months.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&quot;&lt;em&gt;IND-CCA break&lt;&#x2F;em&gt;&quot; – Matrix&#x27;s usage of AES-CTR to encrypt attachments, secrets
and symmetric key backups is not &quot;IND-CCA2 secure&quot;, because it does not
include the AES initialisation vector within the hash used to secure the
payload from tampering. As a result, if an attacker could observe the result
of both a given encryption and a given decryption operation, it would be
possible to extract the encryption private key. However, this is a purely
theoretical attack as Matrix does not provide a way to mount the attack. In
the future, we will fix our use of AES-CTR to include the IV within the hash.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We&#x27;d like to again thank Martin R. Albrecht and Dan Jones from the Information
Security Group at Royal Holloway University London, Benjamin Dowling from
Security of Advanced Systems Group, University of Sheffield and Sofía Celi from
Brave Software for discovering these issues and responsibly disclosing them to
us, and then working with us to agree on an extended disclosure window given
the amount of work needed to verify and ship fixes throughout Matrix over the
course of the summer period.  We welcome any further formal security analysis
work, and hope that it will distinguish clearly between Matrix-the-protocol and
Matrix implementations like matrix-js-sdk, rather than conflating them. You can
read their full paper &lt;a href=&quot;https:&#x2F;&#x2F;nebuchadnezzar-megolm.github.io&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;d also like to thank all the downstream Element package maintainers,
downstream forks and other affected clients for working together under time
constraints for this coordinated release - your patience and understanding is
very much appreciated indeed.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, we are taking extreme measures to avoid future E2EE vulnerabilities.
You will notice that matrix-rust-sdk, hydrogen-sdk and other 2nd and 3rd
generation SDKs were not affected by the bugs at the root cause of the critical
issues here. This is &lt;strong&gt;precisely&lt;&#x2F;strong&gt; why we have been working on replacing the
first generation SDKs with a clean, carefully written Rust implementation in
the form of matrix-rust-sdk, complete with an ongoing independent public audit.&lt;&#x2F;p&gt;
&lt;p&gt;We started the process of auditing matrix-rust-sdk with the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;05&#x2F;16&#x2F;independent-public-audit-of-vodozemac-a-native-rust-reference-implementation-of-matrix-end-to-end-encryption&quot;&gt;Least Authority
vodozemac audit in May&lt;&#x2F;a&gt;, and we have three more audits agreed
– covering matrix-rust-sdk-crypto, matrix-rust-sdk, and a whole reference
Matrix stack.  Ironically, the mitigation work for these vulnerabilities in the
legacy SDKs has severely impacted our timelines for finishing
matrix-rust-sdk-crypto work (in fact, we had to push back the Least Authority
audit of matrix-rust-sdk-crypto given the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&#x2F;milestone&#x2F;1&quot;&gt;burndown&lt;&#x2F;a&gt; has not
progressed), but we will be shifting to the new audited codebase as rapidly as
we possibly can.&lt;&#x2F;p&gt;
&lt;p&gt;Over the coming months we will also introduce our first ever major version
update of Olm and Megolm, in order to fix the MAC truncation issue highlighted
in the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;media&#x2F;Least%20Authority%20-%20Matrix%20vodozemac%20Final%20Audit%20Report.pdf&quot;&gt;vodozemac audit&lt;&#x2F;a&gt; (Issue J), and reduce the risk of further
key-forwarding issues (as per the &quot;Semi-trusted Impersonation&quot; vulnerability
above). New conversations will default to using v2 of Olm&#x2F;Megolm for security,
and existing conversations can be optionally upgraded (similar to a &#x27;room
version&#x27; upgrade in Matrix today). We are also adding extensive end-to-end
testing using &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;polyjuice&quot;&gt;Polyjuice&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;trafficlight&quot;&gt;Traffic
Light&lt;&#x2F;a&gt; to stress-test encryption
and improve reliability.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we will continue our research into layering Matrix over Messaging
Layer Security (MLS) - the IETF proposed standard for interoperable end-to-end
encrypted group messaging.  This work has been delayed by the mitigation
activity above, but otherwise it&#x27;s making good progress and we&#x27;re excited to
see how Decentralised MLS performs in reality against Olm+Megolm v2.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;d like to apologise to the wider Matrix community for the inconvenience and
disruption of these issues, and thank you for your patience while we&#x27;ve
resolved them.&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Denis and the Matrix cryptography &amp;amp; security teams.&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>Pre-disclosure: upcoming critical security release of Matrix SDKs and clients</title>
    <published>2022-09-23T14:53:12+00:00</published>
    <updated>2022-09-23T14:53:12+00:00</updated>
    <author>
      <name>Matrix Security Team</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2022/09/23/pre-disclosure-upcoming-critical-security-release-of-matrix-sd-ks-and-clients/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2022/09/23/pre-disclosure-upcoming-critical-security-release-of-matrix-sd-ks-and-clients/</id>
    <content type="html">&lt;p&gt;We will be releasing a security update to matrix-js-sdk, matrix-ios-sdk and matrix-android-sdk2 and clients which implement end-to-end encryption with these libraries, to patch &lt;strong&gt;critical&lt;&#x2F;strong&gt; security issues, on &lt;strong&gt;Wed, Sept 28th&lt;&#x2F;strong&gt;. The releases will be published in the afternoon, followed by the disclosure blog post around 16:00 UTC. The affected clients include Element Web, Desktop, iOS and Android.  We will also be working with downstream packagers and forks over the coming days to ensure a synchronised release to address affected clients.&lt;&#x2F;p&gt;
&lt;p&gt;Clients using matrix-rust-sdk, hydrogen-sdk and matrix-nio are not affected by these critical issues.  We are also auditing third-party client SDKs and clients in advance of the release, and will work with the projects if action is needed. So far we&#x27;ve confirmed that other popular SDK&#x2F;clients including mtxclient (nheko), Matrix Dart SDK (FluffyChat), Trixnity (Timmy), Syphon, mautrix-go (Gomuks) and mautrix-python are not affected by the issues in question.&lt;&#x2F;p&gt;
&lt;p&gt;If you maintain or package a (potentially) affected E2EE-capable Matrix client and need to coordinate on the release, please contact &lt;a href=&quot;mailto:security@matrix.org&quot;&gt;security@matrix.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;We advise to upgrade as soon as possible after the patched versions are released.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Thank you for your patience while we work to resolve this issue.&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>Security release of matrix-appservice-irc 0.35.0 (High severity)</title>
    <published>2022-09-13T16:56:43+00:00</published>
    <updated>2022-09-13T16:56:43+00:00</updated>
    <author>
      <name>Denis Kasak</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2022/09/13/security-release-of-matrix-appservice-irc-0-35-0-high-severity/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2022/09/13/security-release-of-matrix-appservice-irc-0-35-0-high-severity/</id>
    <content type="html">&lt;p&gt;We&#x27;ve released a new version of matrix.org&#x27;s node-irc 1.3.0 and
matrix-appservice-irc 0.35.0, to patch several security issues:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;IRC mode operator confusion (Low, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;security&#x2F;advisories&#x2F;GHSA-cq7q-5c67-w39w&quot;&gt;GHSA-cq7q-5c67-w39w&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Parsing issue leading to room takeovers (High, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;security&#x2F;advisories&#x2F;GHSA-xvqg-mv25-rwvw&quot;&gt;GHSA-xvqg-mv25-rwvw&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Undisclosed issue (Moderate, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;security&#x2F;advisories&#x2F;GHSA-r3p6-cg2c-c4qw&quot;&gt;GHSA-r3p6-cg2c-c4qw&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The details of the final vulnerability will be released at a later date,
pending an audit of the codebase to ensure it&#x27;s not affected by other similar
vulnerabilities.&lt;&#x2F;p&gt;
&lt;p&gt;The vulnerabilities have been patched in node-irc version 1.3.0 and
matrix-appservice-irc 0.35.0. You can get the release on
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;releases&quot;&gt;Github&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The bridges running on the Libera Chat, OFTC and other networks bridged by the
Matrix.org Foundation have been patched.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Please upgrade your IRC bridge as soon as possible.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The above vulnerabilities were reported by &lt;a href=&quot;https:&#x2F;&#x2F;valentin-lorentz.fr&#x2F;&quot;&gt;Val
Lorentz&lt;&#x2F;a&gt;. Thank you!&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>Security releases: matrix-js-sdk 19.4.0 and matrix-react-sdk 3.53.0</title>
    <published>2022-08-31T18:13:45+00:00</published>
    <updated>2022-08-31T18:13:45+00:00</updated>
    <author>
      <name>Denis Kasak</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2022/08/31/security-releases-matrix-js-sdk-19-4-0-and-matrix-react-sdk-3-53-0/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2022/08/31/security-releases-matrix-js-sdk-19-4-0-and-matrix-react-sdk-3-53-0/</id>
    <content type="html">&lt;p&gt;Today we are issuing security releases of matrix-js-sdk and matrix-react-sdk to
patch a couple of High severity vulnerabilities (reserved as
&lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvekey.cgi?keyword=CVE%2D2022%2D36059&quot;&gt;CVE-2022-36059&lt;&#x2F;a&gt;
for the matrix-js-sdk and
&lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvekey.cgi?keyword=CVE%2D2022%2D36060&quot;&gt;CVE-2022-36060&lt;&#x2F;a&gt;
for the matrix-react-sdk).&lt;&#x2F;p&gt;
&lt;p&gt;Affected clients include those which depend on the affected libraries, such as
Element Web&#x2F;Desktop and Cinny. Releases of the affected clients will follow
shortly. We advise users of those clients to upgrade at their earliest
convenience.&lt;&#x2F;p&gt;
&lt;p&gt;The vulnerabilities give an adversary who you share a room with the ability to
carry out a denial-of-service attack against the affected clients, making it
not show all of a user&#x27;s rooms or spaces and&#x2F;or causing minor temporary
corruption.&lt;&#x2F;p&gt;
&lt;p&gt;The full vulnerability details will be disclosed at a later date, to give
people time to upgrade and us to perform a more thorough audit of the codebase.&lt;&#x2F;p&gt;
&lt;p&gt;Note that while the vulnerability was to our knowledge never exploited
maliciously, some unintentional public testing has left some people affected by
the bug. We made a best effort to sanitize this to stop the breakage. If you
are affected, you may still need to clear the cache and reload your Matrix
client for it to take effect.&lt;&#x2F;p&gt;
&lt;p&gt;We thank &lt;a href=&quot;https:&#x2F;&#x2F;valentin-lorentz.fr&#x2F;&quot;&gt;Val Lorentz&lt;&#x2F;a&gt; who discovered and
reported the vulnerability over the weekend.&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>Security release: Synapse 1.61.1</title>
    <published>2022-06-28T16:19:45+00:00</published>
    <updated>2022-06-28T16:19:45+00:00</updated>
    <author>
      <name>Brendan Abolivier</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2022/06/28/security-release-synapse-1-61-1/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2022/06/28/security-release-synapse-1-61-1/</id>
    <content type="html">&lt;p&gt;Hey everyone!&lt;&#x2F;p&gt;
&lt;p&gt;Today we&#x27;re exceptionally releasing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v1.61.1&quot;&gt;Synapse
1.61.1&lt;&#x2F;a&gt;, which comes
as a security release. &lt;strong&gt;Server administrators are encouraged to update as soon as
possible.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This release fixes a vulnerability with Synapse&#x27;s URL preview feature. URL
previews of some web pages can lead to unbounded recursion, causing the request
to either fail, or in some cases crash the running Synapse process.&lt;&#x2F;p&gt;
&lt;p&gt;Homeservers with the &lt;code&gt;url_preview_enabled&lt;&#x2F;code&gt; configuration option set to &lt;code&gt;false&lt;&#x2F;code&gt;
(the default value) are unaffected. Instances with the &lt;code&gt;enable_media_repo&lt;&#x2F;code&gt;
configuration option set to &lt;code&gt;false&lt;&#x2F;code&gt; are also unaffected, as this also disables
the URL preview functionality.&lt;&#x2F;p&gt;
&lt;p&gt;Server administrators who are unable to update Synapse should disable URL
previews by setting &lt;code&gt;url_preview_enabled: false&lt;&#x2F;code&gt; in their configuration file.
They can also delegate URL preview to a separate, dedicated worker to ensure the
process crashing does not impact other functionality of Synapse.&lt;&#x2F;p&gt;
&lt;p&gt;Please see &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;security&#x2F;advisories&#x2F;GHSA-22p3-qrh9-cx32&quot;&gt;this security
advisory&lt;&#x2F;a&gt;
for more information.&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>0.34.0 security release for matrix-appservice-irc (High severity)</title>
    <published>2022-05-04T11:02:24+00:00</published>
    <updated>2022-05-04T09:27:14+00:00</updated>
    <author>
      <name>Tadeusz Sośnierz</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2022/05/04/0-34-0-security-release-for-matrix-appservice-irc-high-severity/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2022/05/04/0-34-0-security-release-for-matrix-appservice-irc-high-severity/</id>
    <content type="html">&lt;p&gt;We&#x27;ve released updates to matrix-appservice-irc and our forked node-irc that it depends on to patch a High security vulnerability.
It&#x27;s advised to update to 0.34.0 as soon as possible.&lt;&#x2F;p&gt;
&lt;p&gt;The vulnerability allows an attacker to manipulate a Matrix user into executing IRC commands
by having them reply to a maliciously crafted message.&lt;&#x2F;p&gt;
&lt;p&gt;Incorrect handling of a CR character allowed for making part of the message be sent to the IRC server verbatim
rather than as a message to the channel.&lt;&#x2F;p&gt;
&lt;p&gt;If you are currently a matrix-appservice-irc user, exercise caution when replying to messages from untrusted participants
in IRC bridged rooms until your bridge instance has been upgraded.&lt;&#x2F;p&gt;
&lt;p&gt;The vulnerability has been patched in node-irc version 1.2.1 and matrix-appservice-irc 0.34.0.
You can get the release &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;releases&#x2F;tag&#x2F;0.34.0&quot;&gt;on Github&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The bridges running on the Libera Chat, OFTC and other networks bridged by the Matrix.org Foundation have been patched.&lt;&#x2F;p&gt;
&lt;p&gt;The vulnerabilities are tracked as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;security&#x2F;advisories&#x2F;GHSA-37hr-348p-rmf4&quot;&gt;GHSA-37hr-348p-rmf4&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;node-irc&#x2F;security&#x2F;advisories&#x2F;GHSA-52rh-5rpj-c3w6&quot;&gt;GHSA-52rh-5rpj-c3w6&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Thank you, &lt;a href=&quot;https:&#x2F;&#x2F;valentin-lorentz.fr&#x2F;&quot;&gt;Val Lorentz&lt;&#x2F;a&gt; for reporting this vulnerability.&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>High severity vulnerability in Element Desktop 1.9.6 and earlier</title>
    <published>2022-01-31T14:01:24+00:00</published>
    <updated>2022-01-31T14:01:24+00:00</updated>
    <author>
      <name>Matrix Security Team</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2022/01/31/high-severity-vulnerability-in-element-desktop-1-9-6-and-earlier/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2022/01/31/high-severity-vulnerability-in-element-desktop-1-9-6-and-earlier/</id>
    <content type="html">&lt;p&gt;Element Desktop 1.9.6 and earlier depend on a vulnerable version of Electron, leading to a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;element-desktop&#x2F;security&#x2F;advisories&#x2F;GHSA-mjrg-9f8r-h3m7&quot;&gt;High severity vulnerability&lt;&#x2F;a&gt; in Element Desktop, relating to its functionality for opening downloaded files. If successfully exploited, the vulnerability allows an attacker to open an arbitrary file path on the user&#x27;s machine using the platform&#x27;s standard mechanisms, but without the ability to pass additional arguments or data to the program being executed.&lt;&#x2F;p&gt;
&lt;p&gt;However in certain platform configurations, the same vulnerability could allow an attacker to open an arbitrary URL with an arbitrary scheme instead of a file path, again using the platform&#x27;s standard mechanisms. There &lt;a href=&quot;https:&#x2F;&#x2F;positive.security&#x2F;blog&#x2F;url-open-rce&quot;&gt;has been research demonstrating&lt;&#x2F;a&gt; that the ability to open arbitrary URLs can sometimes lead to arbitrary code execution.&lt;&#x2F;p&gt;
&lt;p&gt;The attack requires user interaction and the exploit is complex. To the best of our knowledge, the vulnerability has never been exploited in the wild.&lt;&#x2F;p&gt;
&lt;p&gt;Patched in 1.9.7 with further hardening done in 1.9.9 to ensure it&#x27;s harder to exploit even in light of new Electron vulnerabilities. Please upgrade to 1.9.9 as soon as possible. The vulnerability has been assigned &lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name=CVE-2022-23597&quot;&gt;CVE-2022-23597&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Discovered and reported by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;msrkp&quot;&gt;Sirius&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheGrandPew&quot;&gt;TheGrandPew&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>On Matrix and the log4j vulnerabilities</title>
    <published>2021-12-15T12:58:02+00:00</published>
    <updated>2021-12-15T12:58:02+00:00</updated>
    <author>
      <name>Matrix Security Team</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2021/12/15/on-matrix-and-the-log4j-vulnerabilities/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2021/12/15/on-matrix-and-the-log4j-vulnerabilities/</id>
    <content type="html">&lt;p&gt;There is currently a lot of buzz and uncertainty around a number of vulnerabilities discovered in the log4j library in the Java ecosystem. These vulnerabilities are collectively known as &quot;Log4Shell&quot; and currently encompass CVE-2021-44228 and CVE-2021-45046.&lt;&#x2F;p&gt;
&lt;p&gt;First and foremost, there are to our knowledge no Matrix homeservers written in Java. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;&quot;&gt;Synapse&lt;&#x2F;a&gt;, the canonical implementation developed by the Matrix Foundation and the implementation that is backing matrix.org, is written in Python and thus unaffected. P2P Matrix relies on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&quot;&gt;Dendrite&lt;&#x2F;a&gt;, our next-gen homeserver which is written in Go and is unaffected. &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;famedly&#x2F;conduit&#x2F;&quot;&gt;Conduit&lt;&#x2F;a&gt;, a community homeserver, is written in Rust and also unaffected. Supporting components like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sygnal&quot;&gt;Sygnal&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sydent&quot;&gt;Sydent&lt;&#x2F;a&gt; are written in Python and unaffected.&lt;&#x2F;p&gt;
&lt;p&gt;There are two components that are commonly used in the Matrix ecosystem that do rely on Java. These are Jitsi, specifically the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jitsi&#x2F;jitsi-videobridge&quot;&gt;Jitsi Videobridge&lt;&#x2F;a&gt; for VoIP, and &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;signald&#x2F;signald&quot;&gt;signald&lt;&#x2F;a&gt; used by the Signal bridge. Both components pull in log4j as part of their (transitive) dependencies. We&#x27;re not aware of other bridges that are dependent on Java-based components.&lt;&#x2F;p&gt;
&lt;p&gt;For both of these projects updates have been published that integrate log4j 2.15.0 covering the initial CVE and we&#x27;re currently waiting for additional updates to be published that integrate log4j 2.16.0 to cover the second. In the meantime, we&#x27;ve put all mitigations we are aware of in place on our systems and we strongly recommend everyone do the same.&lt;&#x2F;p&gt;
&lt;p&gt;For what mitigations to put in place, we recommend following the &lt;a href=&quot;https:&#x2F;&#x2F;www.lunasec.io&#x2F;docs&#x2F;blog&#x2F;log4j-zero-day-mitigation-guide&#x2F;&quot;&gt;recommendations provided by LunaSec&lt;&#x2F;a&gt;. They also provide a lot of background information on the vulnerabilities and how to audit for them.&lt;&#x2F;p&gt;
&lt;p&gt;Please keep an eye out for releases from the Jitsi and signald projects and follow their upgrade instructions to update your own deployments as soon as possible.&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>Disclosure: buffer overflow in libolm and matrix-js-sdk</title>
    <published>2021-12-13T18:35:18+00:00</published>
    <updated>2021-12-13T16:11:07+00:00</updated>
    <author>
      <name>Matrix Security Team</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2021/12/13/disclosure-buffer-overflow-in-libolm-and-matrix-js-sdk/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2021/12/13/disclosure-buffer-overflow-in-libolm-and-matrix-js-sdk/</id>
    <content type="html">&lt;p&gt;Today we are releasing security updates to libolm, matrix-js-sdk, and several clients including Element Web &#x2F; Desktop. Users are encouraged to upgrade as soon as possible. This resolves the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;12&#x2F;03&#x2F;pre-disclosure-upcoming-security-release-of-libolm-and-matrix-js-sdk&quot;&gt;pre-disclosure&lt;&#x2F;a&gt; issued on December 3rd.&lt;&#x2F;p&gt;
&lt;p&gt;Fixed library versions are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;libolm: &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.matrix.org&#x2F;matrix-org&#x2F;olm&#x2F;-&#x2F;tree&#x2F;3.2.8&quot;&gt;3.2.8&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;matrix-js-sdk: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;releases&#x2F;tag&#x2F;v15.2.1&quot;&gt;15.2.1&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Client versions incorporating the fixes are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Element Web &#x2F; Desktop: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;element-web&#x2F;releases&#x2F;tag&#x2F;v1.9.7&quot;&gt;1.9.7&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;SchildiChat Web &#x2F; Desktop: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SchildiChat&#x2F;schildichat-desktop&#x2F;releases&#x2F;tag&#x2F;v1.9.7-sc.1&quot;&gt;1.9.7-sc.1&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Cinny: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ajbura&#x2F;cinny&#x2F;releases&#x2F;tag&#x2F;v1.6.0&quot;&gt;1.6.0&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These releases mitigate a buffer overflow in &lt;code&gt;olm_session_describe&lt;&#x2F;code&gt;, a libolm debugging function used by matrix-js-sdk in its end-to-end encryption (E2EE) implementation. If you rely on matrix-js-sdk for E2EE, you are affected. This vulnerability has been assigned &lt;a href=&quot;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name=CVE-2021-44538&quot;&gt;CVE-2021-44538&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Clients which do &lt;em&gt;not&lt;&#x2F;em&gt; use matrix-js-sdk for E2EE, like FluffyChat or Element Android &#x2F; iOS, are &lt;em&gt;not&lt;&#x2F;em&gt; affected.&lt;&#x2F;p&gt;
&lt;p&gt;This issue has been present since the introduction of the &lt;code&gt;olm_session_describe&lt;&#x2F;code&gt; function in October 2019 (commits: &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.matrix.org&#x2F;matrix-org&#x2F;olm&#x2F;-&#x2F;commit&#x2F;39a1ee0b18f0fced6d7bc293cc9a46ea70ec9e96&quot;&gt;libolm&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;commit&#x2F;e6699c5424a856a639baa6d6f78d44594baaf404&quot;&gt;matrix-js-sdk&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;We do not believe it is practical to successfully exploit this issue. However, upgrading remains important as the overflow &lt;em&gt;can&lt;&#x2F;em&gt; be triggered remotely.&lt;&#x2F;p&gt;
&lt;p&gt;Separately from the above vulnerability, we noticed during an internal audit that the libolm bindings in matrix-js-sdk were not zeroing out certain arrays containing entropy for cryptographic operations. This causes the entropy to remain resident in memory longer than necessary. As a defense-in-depth measure, this release of libolm now proactively overwrites those arrays when it is safe to do so.&lt;&#x2F;p&gt;
&lt;p&gt;Lastly, we are also taking this opportunity to update the version of Electron bundled with Element Desktop, pulling in the latest backported security fixes there.&lt;&#x2F;p&gt;
&lt;p&gt;The buffer overflow was found and reported by GitHub user &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brevilo&quot;&gt;@brevilo&lt;&#x2F;a&gt; in the course of developing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brevilo&#x2F;jolm&#x2F;&quot;&gt;jOlm&lt;&#x2F;a&gt;, a library of Java bindings to libolm; thank you. If you believe you&#x27;ve discovered a security vulnerability in Matrix or its implementations, please see our &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;security-disclosure-policy&#x2F;&quot;&gt;Security Disclosure Policy&lt;&#x2F;a&gt; for how to get in touch.&lt;&#x2F;p&gt;
</content>
</entry>

    
    
<entry xml:lang="en">
    <title>Pre-disclosure: upcoming security release of libolm and matrix-js-sdk</title>
    <published>2021-12-03T00:00:00+00:00</published>
    <updated>2021-12-03T00:00:00+00:00</updated>
    <author>
      <name>Matrix Security Team</name>
    </author>
    <link rel="alternate" href="https://tune-your-chat.github.io/blog/2021/12/03/pre-disclosure-upcoming-security-release-of-libolm-and-matrix-js-sdk/" type="text/html"/>
    <id>https://tune-your-chat.github.io/blog/2021/12/03/pre-disclosure-upcoming-security-release-of-libolm-and-matrix-js-sdk/</id>
    <content type="html">&lt;p&gt;On &lt;strong&gt;Monday, 13th December&lt;&#x2F;strong&gt; we plan to publish a security release of libolm at 15:00 UTC to address a single high severity issue. To the best of our knowledge, only matrix-js-sdk and clients relying on it for E2EE are affected by this issue. This includes Element Web&#x2F;Desktop and their forks (like SchildiChat). The release of libolm will be immediately followed by a security release of matrix-js-sdk and the affected clients. Users of these clients are encouraged to &lt;strong&gt;upgrade as soon as the patched versions are released&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We will be reaching out to downstream packagers to ensure they can prepare patched versions of the affected packages at the time of the release. The details of the vulnerability will be disclosed in a blog post on the day of the release. There is so far no evidence of the vulnerability being exploited in the wild.&lt;&#x2F;p&gt;
&lt;p&gt;The patched version numbers will be as follows:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;libolm 3.2.8&lt;&#x2F;li&gt;
&lt;li&gt;matrix-js-sdk 15.2.1&lt;&#x2F;li&gt;
&lt;li&gt;Element Web&#x2F;Desktop 1.9.7&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Thank you for your patience while we work to resolve this issue.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Edit, 2021-12-13: Added patched release numbers.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
</content>
</entry>

    
    
</feed>
